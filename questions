Given a large collection C, of N documents, a clustering algorithm works as follows:

Step 1: extract keywords from each document, compute distances between pairs of documents, and use the distance metric to decide whether a pair goes in the same cluster or into two different clusters;
Step 2: once dusters are formed, compute distances between the centers of the clusters to decide whether or not the two clusters should merge into a larger cluster
Step 3: repeat step 2 until either all documents are in one big cluster or distances between cluster centers converge

Assume you have following the functions:

Vector extract(Doc d) // extract keyword from d and return a vector
float similar(Vector v1, Vector v2) // compute similarity between v1 and v2
Doc getCenter(DocSet D)	// return the center of a cluster

Show how this clustering algorithm can be implemented using esmap-reduce.
Calculate the speedup on a distributed system with N nodes. 
Analyse the impact of communication cost on the  speedup.
